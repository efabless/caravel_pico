/* Generated by Yosys 0.9+4052 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os) */

module mgmt_core_wrapper(core_clk, core_rstn, gpio_out_pad, gpio_in_pad, gpio_mode0_pad, gpio_mode1_pad, gpio_outenb_pad, gpio_inenb_pad, la_input, la_output, la_oenb, la_iena, flash_csb, flash_clk, flash_io0_oeb, flash_io1_oeb, flash_io2_oeb, flash_io3_oeb, flash_io0_do, flash_io1_do, flash_io2_do, flash_io3_do, flash_io0_di, flash_io1_di, flash_io2_di, flash_io3_di, mprj_wb_iena, mprj_cyc_o, mprj_stb_o, mprj_we_o, mprj_sel_o, mprj_adr_o, mprj_dat_o, mprj_ack_i, mprj_dat_i, hk_stb_o, hk_cyc_o, hk_dat_i, hk_ack_i, irq, user_irq_ena, qspi_enabled, uart_enabled, spi_enabled, debug_mode, ser_tx, ser_rx, spi_csb, spi_sck, spi_sdo, spi_sdoenb, spi_sdi, debug_in, debug_out, debug_oeb, sram_ro_clk, sram_ro_csb, sram_ro_addr, sram_ro_data, trap);
  input core_clk;
  input core_rstn;
  input debug_in;
  output debug_mode;
  output debug_oeb;
  output debug_out;
  output flash_clk;
  output flash_csb;
  input flash_io0_di;
  output flash_io0_do;
  output flash_io0_oeb;
  input flash_io1_di;
  output flash_io1_do;
  output flash_io1_oeb;
  input flash_io2_di;
  output flash_io2_do;
  output flash_io2_oeb;
  input flash_io3_di;
  output flash_io3_do;
  output flash_io3_oeb;
  input gpio_in_pad;
  output gpio_inenb_pad;
  output gpio_mode0_pad;
  output gpio_mode1_pad;
  output gpio_out_pad;
  output gpio_outenb_pad;
  input hk_ack_i;
  output hk_cyc_o;
  input [31:0] hk_dat_i;
  output hk_stb_o;
  input [5:0] irq;
  output [127:0] la_iena;
  input [127:0] la_input;
  output [127:0] la_oenb;
  output [127:0] la_output;
  wire \mem_addr[0] ;
  wire \mem_addr[1] ;
  wire \mem_addr[2] ;
  wire \mem_addr[3] ;
  wire \mem_addr[4] ;
  wire \mem_addr[5] ;
  wire \mem_addr[6] ;
  wire \mem_addr[7] ;
  wire mem_ena;
  wire \mem_rdata[0] ;
  wire \mem_rdata[10] ;
  wire \mem_rdata[11] ;
  wire \mem_rdata[12] ;
  wire \mem_rdata[13] ;
  wire \mem_rdata[14] ;
  wire \mem_rdata[15] ;
  wire \mem_rdata[16] ;
  wire \mem_rdata[17] ;
  wire \mem_rdata[18] ;
  wire \mem_rdata[19] ;
  wire \mem_rdata[1] ;
  wire \mem_rdata[20] ;
  wire \mem_rdata[21] ;
  wire \mem_rdata[22] ;
  wire \mem_rdata[23] ;
  wire \mem_rdata[24] ;
  wire \mem_rdata[25] ;
  wire \mem_rdata[26] ;
  wire \mem_rdata[27] ;
  wire \mem_rdata[28] ;
  wire \mem_rdata[29] ;
  wire \mem_rdata[2] ;
  wire \mem_rdata[30] ;
  wire \mem_rdata[31] ;
  wire \mem_rdata[3] ;
  wire \mem_rdata[4] ;
  wire \mem_rdata[5] ;
  wire \mem_rdata[6] ;
  wire \mem_rdata[7] ;
  wire \mem_rdata[8] ;
  wire \mem_rdata[9] ;
  wire \mem_wdata[0] ;
  wire \mem_wdata[10] ;
  wire \mem_wdata[11] ;
  wire \mem_wdata[12] ;
  wire \mem_wdata[13] ;
  wire \mem_wdata[14] ;
  wire \mem_wdata[15] ;
  wire \mem_wdata[16] ;
  wire \mem_wdata[17] ;
  wire \mem_wdata[18] ;
  wire \mem_wdata[19] ;
  wire \mem_wdata[1] ;
  wire \mem_wdata[20] ;
  wire \mem_wdata[21] ;
  wire \mem_wdata[22] ;
  wire \mem_wdata[23] ;
  wire \mem_wdata[24] ;
  wire \mem_wdata[25] ;
  wire \mem_wdata[26] ;
  wire \mem_wdata[27] ;
  wire \mem_wdata[28] ;
  wire \mem_wdata[29] ;
  wire \mem_wdata[2] ;
  wire \mem_wdata[30] ;
  wire \mem_wdata[31] ;
  wire \mem_wdata[3] ;
  wire \mem_wdata[4] ;
  wire \mem_wdata[5] ;
  wire \mem_wdata[6] ;
  wire \mem_wdata[7] ;
  wire \mem_wdata[8] ;
  wire \mem_wdata[9] ;
  wire \mem_wen[0] ;
  wire \mem_wen[1] ;
  wire \mem_wen[2] ;
  wire \mem_wen[3] ;
  input mprj_ack_i;
  output [31:0] mprj_adr_o;
  output mprj_cyc_o;
  input [31:0] mprj_dat_i;
  output [31:0] mprj_dat_o;
  output [3:0] mprj_sel_o;
  output mprj_stb_o;
  output mprj_wb_iena;
  output mprj_we_o;
  output qspi_enabled;
  input ser_rx;
  output ser_tx;
  output spi_csb;
  output spi_enabled;
  output spi_sck;
  input spi_sdi;
  output spi_sdo;
  output spi_sdoenb;
  input [7:0] sram_ro_addr;
  input sram_ro_clk;
  input sram_ro_csb;
  output [31:0] sram_ro_data;
  output trap;
  output uart_enabled;
  output [2:0] user_irq_ena;
  DFFRAM DFFRAM (
    .A({ \mem_addr[7] , \mem_addr[6] , \mem_addr[5] , \mem_addr[4] , \mem_addr[3] , \mem_addr[2] , \mem_addr[1] , \mem_addr[0]  }),
    .CLK(core_clk),
    .Di({ \mem_wdata[31] , \mem_wdata[30] , \mem_wdata[29] , \mem_wdata[28] , \mem_wdata[27] , \mem_wdata[26] , \mem_wdata[25] , \mem_wdata[24] , \mem_wdata[23] , \mem_wdata[22] , \mem_wdata[21] , \mem_wdata[20] , \mem_wdata[19] , \mem_wdata[18] , \mem_wdata[17] , \mem_wdata[16] , \mem_wdata[15] , \mem_wdata[14] , \mem_wdata[13] , \mem_wdata[12] , \mem_wdata[11] , \mem_wdata[10] , \mem_wdata[9] , \mem_wdata[8] , \mem_wdata[7] , \mem_wdata[6] , \mem_wdata[5] , \mem_wdata[4] , \mem_wdata[3] , \mem_wdata[2] , \mem_wdata[1] , \mem_wdata[0]  }),
    .Do({ \mem_rdata[31] , \mem_rdata[30] , \mem_rdata[29] , \mem_rdata[28] , \mem_rdata[27] , \mem_rdata[26] , \mem_rdata[25] , \mem_rdata[24] , \mem_rdata[23] , \mem_rdata[22] , \mem_rdata[21] , \mem_rdata[20] , \mem_rdata[19] , \mem_rdata[18] , \mem_rdata[17] , \mem_rdata[16] , \mem_rdata[15] , \mem_rdata[14] , \mem_rdata[13] , \mem_rdata[12] , \mem_rdata[11] , \mem_rdata[10] , \mem_rdata[9] , \mem_rdata[8] , \mem_rdata[7] , \mem_rdata[6] , \mem_rdata[5] , \mem_rdata[4] , \mem_rdata[3] , \mem_rdata[2] , \mem_rdata[1] , \mem_rdata[0]  }),
    .EN(mem_ena),
    .WE({ \mem_wen[3] , \mem_wen[2] , \mem_wen[1] , \mem_wen[0]  })
  );
  mgmt_core core (
    .clk(core_clk),
    .debug_in(debug_in),
    .debug_mode(debug_mode),
    .debug_oeb(debug_oeb),
    .debug_out(debug_out),
    .flash_clk(flash_clk),
    .flash_csb(flash_csb),
    .flash_io0_di(flash_io0_di),
    .flash_io0_do(flash_io0_do),
    .flash_io0_oeb(flash_io0_oeb),
    .flash_io1_di(flash_io1_di),
    .flash_io1_do(flash_io1_do),
    .flash_io1_oeb(flash_io1_oeb),
    .flash_io2_di(flash_io2_di),
    .flash_io2_do(flash_io2_do),
    .flash_io2_oeb(flash_io2_oeb),
    .flash_io3_di(flash_io3_di),
    .flash_io3_do(flash_io3_do),
    .flash_io3_oeb(flash_io3_oeb),
    .gpio_in_pad(gpio_in_pad),
    .gpio_inenb_pad(gpio_inenb_pad),
    .gpio_mode0_pad(gpio_mode0_pad),
    .gpio_mode1_pad(gpio_mode1_pad),
    .gpio_out_pad(gpio_out_pad),
    .gpio_outenb_pad(gpio_outenb_pad),
    .hk_ack_i(hk_ack_i),
    .hk_cyc_o(hk_cyc_o),
    .hk_dat_i(hk_dat_i),
    .hk_stb_o(hk_stb_o),
    .irq(irq),
    .la_iena(la_iena),
    .la_input(la_input),
    .la_oenb(la_oenb),
    .la_output(la_output),
    .mem_addr({ \mem_addr[7] , \mem_addr[6] , \mem_addr[5] , \mem_addr[4] , \mem_addr[3] , \mem_addr[2] , \mem_addr[1] , \mem_addr[0]  }),
    .mem_ena(mem_ena),
    .mem_rdata({ \mem_rdata[31] , \mem_rdata[30] , \mem_rdata[29] , \mem_rdata[28] , \mem_rdata[27] , \mem_rdata[26] , \mem_rdata[25] , \mem_rdata[24] , \mem_rdata[23] , \mem_rdata[22] , \mem_rdata[21] , \mem_rdata[20] , \mem_rdata[19] , \mem_rdata[18] , \mem_rdata[17] , \mem_rdata[16] , \mem_rdata[15] , \mem_rdata[14] , \mem_rdata[13] , \mem_rdata[12] , \mem_rdata[11] , \mem_rdata[10] , \mem_rdata[9] , \mem_rdata[8] , \mem_rdata[7] , \mem_rdata[6] , \mem_rdata[5] , \mem_rdata[4] , \mem_rdata[3] , \mem_rdata[2] , \mem_rdata[1] , \mem_rdata[0]  }),
    .mem_wdata({ \mem_wdata[31] , \mem_wdata[30] , \mem_wdata[29] , \mem_wdata[28] , \mem_wdata[27] , \mem_wdata[26] , \mem_wdata[25] , \mem_wdata[24] , \mem_wdata[23] , \mem_wdata[22] , \mem_wdata[21] , \mem_wdata[20] , \mem_wdata[19] , \mem_wdata[18] , \mem_wdata[17] , \mem_wdata[16] , \mem_wdata[15] , \mem_wdata[14] , \mem_wdata[13] , \mem_wdata[12] , \mem_wdata[11] , \mem_wdata[10] , \mem_wdata[9] , \mem_wdata[8] , \mem_wdata[7] , \mem_wdata[6] , \mem_wdata[5] , \mem_wdata[4] , \mem_wdata[3] , \mem_wdata[2] , \mem_wdata[1] , \mem_wdata[0]  }),
    .mem_wen({ \mem_wen[3] , \mem_wen[2] , \mem_wen[1] , \mem_wen[0]  }),
    .mprj_ack_i(mprj_ack_i),
    .mprj_adr_o(mprj_adr_o),
    .mprj_cyc_o(mprj_cyc_o),
    .mprj_dat_i(mprj_dat_i),
    .mprj_dat_o(mprj_dat_o),
    .mprj_sel_o(mprj_sel_o),
    .mprj_stb_o(mprj_stb_o),
    .mprj_wb_iena(mprj_wb_iena),
    .mprj_we_o(mprj_we_o),
    .qspi_enabled(qspi_enabled),
    .resetn(core_rstn),
    .ser_rx(ser_rx),
    .ser_tx(ser_tx),
    .spi_csb(spi_csb),
    .spi_enabled(spi_enabled),
    .spi_sck(spi_sck),
    .spi_sdi(spi_sdi),
    .spi_sdo(spi_sdo),
    .spi_sdoenb(spi_sdoenb),
    .sram_ro_addr(sram_ro_addr),
    .sram_ro_clk(sram_ro_clk),
    .sram_ro_csb(sram_ro_csb),
    .sram_ro_data(sram_ro_data),
    .trap(trap),
    .uart_enabled(uart_enabled),
    .user_irq_ena(user_irq_ena)
  );
endmodule
